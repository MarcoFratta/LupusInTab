name: Android CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Build web assets
        run: npm run build

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Add Capacitor Android platform
        run: npx cap add android || echo "Android platform already exists"

      - name: Generate app icons and sync
        run: |
          mkdir -p resources
          echo "Place resources/icon.png if needed"
          npx capacitor-assets generate
          npx cap sync android

      - name: Write keystore file
        run: |
          cd android
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > app/keystore.jks

      - name: Write signing.properties
        run: |
          cd android
          cat > app/signing.properties << EOF
          storeFile=app/keystore.jks
          storePassword=${{ secrets.KEYSTORE_PASSWORD }}
          keyAlias=${{ secrets.KEY_ALIAS }}
          keyPassword=${{ secrets.KEY_PASSWORD }}
          EOF

      - name: Replace build.gradle with signing template
        run: |
          cd android/app
          cat > build.gradle << 'EOF'
          apply plugin: 'com.android.application'
          
          android {
            compileSdkVersion 34
            defaultConfig {
              applicationId "com.example.lupus"
              minSdkVersion 24
              targetSdkVersion 34
              versionCode 1
              versionName "1.0"
            }
            
            signingConfigs {
              release {
                def keystorePropertiesFile = rootProject.file("app/signing.properties")
                def keystoreProperties = new Properties()
                if (keystorePropertiesFile.exists()) {
                  keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
                }
                if (keystoreProperties['storeFile']) {
                  storeFile file(keystoreProperties['storeFile'])
                  storePassword keystoreProperties['storePassword']
                  keyAlias keystoreProperties['keyAlias']
                  keyPassword keystoreProperties['keyPassword']
                }
              }
            }
            
            buildTypes {
              release {
                minifyEnabled false
                signingConfig signingConfigs.release
              }
            }
          }
          
          dependencies {
            implementation fileTree(dir: 'libs', include: ['*.jar'])
            implementation "androidx.appcompat:appcompat:1.6.1"
            implementation "com.google.android.material:material:1.9.0"
          }
          EOF

      - name: Configure Gradle properties
        run: |
          cd android
          cat > gradle.properties << EOF
          org.gradle.jvmargs=-Xmx4g -XX:MaxMetaspaceSize=512m -Dfile.encoding=UTF-8
          org.gradle.daemon=false
          org.gradle.parallel=true
          android.useAndroidX=true
          android.enableJetifier=true
          EOF
          ./gradlew clean

      - name: Build Release AAB
        run: |
          cd android
          chmod +x ./gradlew
          ./gradlew bundleRelease
          cp app/build/outputs/bundle/release/app-release.aab app/build/outputs/bundle/release/lupusMaster.aab

      - name: Verify AAB Signature
        run: |
          cd android
          jarsigner -verify -verbose -certs app/build/outputs/bundle/release/lupusMaster.aab

      - name: Upload Release AAB
        uses: actions/upload-artifact@v4
        with:
          name: lupusMaster-aab
          path: android/app/build/outputs/bundle/release/lupusMaster.aab
          if-no-files-found: error

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Release AAB
        uses: actions/download-artifact@v4
        with:
          name: lupusMaster-aab
          path: android/app/build/outputs/bundle/release/

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Run Semantic Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release