name: Android CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: Install dependencies
        run: npm ci
      - name: Build web assets
        run: npm run build
      - name: Install ImageMagick
        run: sudo apt-get update && sudo apt-get install -y imagemagick
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
      - name: Set up Android SDK
        uses: android-actions/setup-android@v3
      - name: Add Capacitor Android platform (if missing)
        run: npx cap add android || echo "Android platform already exists"
      - name: Prepare Icon & Splash Assets
        run: |
          echo "Converting favicon.svg to PNG..."
          mkdir -p resources
          convert -background none public/favicon.svg -resize 1024x1024 resources/icon.png
          echo "Generating app icons and splash..."
          npx capacitor-assets generate
          npx cap sync android
          echo "Assets generated & synced!"
      - name: Configure Gradle Properties
        run: |
          cd android
          cat > gradle.properties << 'EOF'
          org.gradle.jvmargs=-Xmx4g -XX:MaxMetaspaceSize=512m -Dfile.encoding=UTF-8
          org.gradle.daemon=false
          org.gradle.parallel=true
          android.useAndroidX=true
          android.enableJetifier=true
          EOF
      - name: Clean Gradle build
        run: |
          cd android
          ./gradlew clean
      - name: Build Debug APK
        run: |
          cd android
          chmod +x ./gradlew
          echo "Building debug APK..."
          ./gradlew assembleDebug
          echo "Debug APK build completed!"
          
          echo "Renaming debug APK to lupusMaster.apk..."
          cp app/build/outputs/apk/debug/app-debug.apk app/build/outputs/apk/debug/lupusMaster.apk
          echo "APK renamed successfully!"
      - name: Verify Build Outputs
        run: |
          echo "Checking build outputs..."
          ls -la android/app/build/outputs/apk/debug/ || echo "Debug APK directory not found"
          echo "Looking for lupusMaster.apk..."
          if [ -f "android/app/build/outputs/apk/debug/lupusMaster.apk" ]; then
            echo "✅ lupusMaster.apk found and ready for upload!"
          else
            echo "❌ lupusMaster.apk not found!"
          fi
      - name: Upload lupusMaster.apk
        uses: actions/upload-artifact@v4
        with:
          name: lupusMaster-apk
          path: android/app/build/outputs/apk/debug/lupusMaster.apk
          if-no-files-found: error

          
  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Check Available Artifacts
        run: |
          echo "Checking available artifacts from build job..."
          gh run list --limit 1 --json artifacts --jq '.[0].artifacts[].name' || echo "No artifacts found"
      - name: Download lupusMaster.apk
        uses: actions/download-artifact@v4
        with:
          name: lupusMaster-apk
          path: android/app/build/outputs/apk/debug/
      - name: Verify Available Files
        run: |
          echo "Listing available files..."
          ls -la android/app/build/outputs/apk/debug/ || echo "Debug directory not found"
          echo "Looking for lupusMaster.apk..."
          if [ -f "android/app/build/outputs/apk/debug/lupusMaster.apk" ]; then
            echo "✅ lupusMaster.apk found and ready for use!"
          else
            echo "❌ lupusMaster.apk not found!"
          fi
      - name: Prepare APK for Release
        run: |
          echo "Preparing APK for semantic-release..."
          ls -la android/app/build/outputs/apk/debug/
          echo "APK file size:"
          du -h android/app/build/outputs/apk/debug/lupusMaster.apk || echo "APK not found"
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: Install dependencies
        run: npm ci
      - name: Run Semantic Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release
