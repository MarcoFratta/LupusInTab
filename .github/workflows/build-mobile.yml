name: Build Android Mobile App

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master ]
  release:
    types: [ published ]

jobs:
  build-android:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build Vue project
        run: npm run build

      - name: Install Android platform
        run: npx cap add android

      - name: Sync Capacitor
        run: npx cap sync android

      - name: Verify Capacitor setup
        run: npx cap doctor
        
      - name: Debug environment
        run: |
          echo "Java version:"
          java -version
          echo "JAVA_HOME: $JAVA_HOME"
          echo "ANDROID_HOME: $ANDROID_HOME"
          echo "Current directory: $(pwd)"
          echo "Android directory contents:"
          ls -la android/

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
        
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          api-level: '34'
          build-tools: '34.0.0'
          platforms: 'android-34'
          
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
            
      - name: Verify Android SDK
        run: |
          echo "Android SDK setup verification:"
          echo "ANDROID_HOME: $ANDROID_HOME"
          echo "JAVA_HOME: $JAVA_HOME"
          echo "Android SDK contents:"
          ls -la $ANDROID_HOME/
          echo "Build tools:"
          ls -la $ANDROID_HOME/build-tools/
          echo "Platforms:"
          ls -la $ANDROID_HOME/platforms/
          
      - name: Check Gradle version
        run: |
          cd android
          ./gradlew --version
          echo "Gradle wrapper properties:"
          cat gradle/wrapper/gradle-wrapper.properties

      - name: Build Android APK
        run: |
          cd android
          ./gradlew assembleRelease --no-daemon --parallel
        env:
          ANDROID_HOME: ${{ env.ANDROID_HOME }}
          JAVA_HOME: ${{ env.JAVA_HOME }}
          GRADLE_OPTS: "-Dorg.gradle.jvmargs=-Xmx2048m -XX:+HeapDumpOnOutOfMemoryError"

      - name: Build Android AAB
        run: |
          cd android
          ./gradlew bundleRelease --no-daemon --parallel
        env:
          ANDROID_HOME: ${{ env.ANDROID_HOME }}
          JAVA_HOME: ${{ env.JAVA_HOME }}
          GRADLE_OPTS: "-Dorg.gradle.jvmargs=-Xmx2048m -XX:+HeapDumpOnOutOfMemoryError"

      - name: Upload Android artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-builds
          path: |
            android/app/build/outputs/apk/release/*.apk
            android/app/build/outputs/bundle/release/*.aab



  semantic-release:
    needs: [build-android]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Semantic Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_ENV: production
        run: npm run release

  deploy-vercel:
    needs: [semantic-release]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build Vue project
        run: npm run build

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.ORG_ID }}
          vercel-project-id: ${{ secrets.PROJECT_ID }}
          working-directory: ./
          vercel-args: '--prod'

